#!/usr/bin/python

import os
os.environ['DJANGO_SETTINGS_MODULE'] = "karaage.conf.settings"
from django.conf import settings
from karaage.projects.models import Project
from karaage.institutes.models import Institute

class InitDefaultProject():
    import django
    django.setup()

    def __init__(self):
        self.logger = None

    def log(self, message):
        print message

    def getProject(self, name):
        self.log("Get Project 1 %s" %(name))
        project = None
        try:
            project = Project.objects.get(name = name)
            if project:
                self.log("Find project %s" %(project.name))
            else:
                self.log("Project %s not found" %(project.name))
        except Project.DoesNotExist:
            self.log("project %s does not exists" %(name))
        except:
            self.log("Exception: ", traceback.format_exc())
        finally:
            return project

    def createProject(self, pid, name, institute_name):
        project = None
        try:
            institute = getInstitute(institute_name)
            if institute:
                self.log("Find insititute %s" %(institute.name))
                project = Project.objects.create(pid = pid, name = name, institute = institute)
            else:
                self.log("Insititute %s does not exist" %(institute_name))
        except:
            self.log("Exception: ", traceback.format_exc())
        finally:
            return project

    def defaultProjects(self):
        if hasattr(settings, "DEFAULT_PROJECTS"):
            for p in settings.DEFAULT_PROJECTS:
                project = self.getProject(p["project_name"])
                if project:
                    self.log("Find project %s" %(project.name))
                else:
                    self.log("Create project name = %s, pid = %s, institute name = %s" %(p["project_name"], p["pid"], p["institute_name"]))
                    project = self.createProject(p["pid"], p["project_name"], p["institute_name"])
                    if project:
                        self.log("Create project %s OK." %(project.name))
                    else:
                        self.log("Create project %s failed." %(p["project_name"]))

init = InitDefaultProject()
init.defaultProjects()
